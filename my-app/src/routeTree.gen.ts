/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WalletRouteImport } from './routes/wallet'
import { Route as QuizRouteImport } from './routes/quiz'
import { Route as PuzzlesRouteImport } from './routes/puzzles'
import { Route as MyhorsesRouteImport } from './routes/myhorses'
import { Route as LevelsRouteImport } from './routes/levels'
import { Route as LeaderboardRouteImport } from './routes/leaderboard'
import { Route as InstructionsRouteImport } from './routes/instructions'
import { Route as HorsesRouteImport } from './routes/horses'
import { Route as CompetitionsRouteImport } from './routes/competitions'
import { Route as BuyhorsesRouteImport } from './routes/buyhorses'
import { Route as BreedsRouteImport } from './routes/breeds'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketAdRouteImport } from './routes/market.$ad'
import { Route as HorseHorseIdRouteImport } from './routes/horse.$horseId'
import { Route as CompetitionCompetitionIdRouteImport } from './routes/competition.$competitionId'

const WalletRoute = WalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizRoute = QuizRouteImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const PuzzlesRoute = PuzzlesRouteImport.update({
  id: '/puzzles',
  path: '/puzzles',
  getParentRoute: () => rootRouteImport,
} as any)
const MyhorsesRoute = MyhorsesRouteImport.update({
  id: '/myhorses',
  path: '/myhorses',
  getParentRoute: () => rootRouteImport,
} as any)
const LevelsRoute = LevelsRouteImport.update({
  id: '/levels',
  path: '/levels',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaderboardRoute = LeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRouteImport,
} as any)
const InstructionsRoute = InstructionsRouteImport.update({
  id: '/instructions',
  path: '/instructions',
  getParentRoute: () => rootRouteImport,
} as any)
const HorsesRoute = HorsesRouteImport.update({
  id: '/horses',
  path: '/horses',
  getParentRoute: () => rootRouteImport,
} as any)
const CompetitionsRoute = CompetitionsRouteImport.update({
  id: '/competitions',
  path: '/competitions',
  getParentRoute: () => rootRouteImport,
} as any)
const BuyhorsesRoute = BuyhorsesRouteImport.update({
  id: '/buyhorses',
  path: '/buyhorses',
  getParentRoute: () => rootRouteImport,
} as any)
const BreedsRoute = BreedsRouteImport.update({
  id: '/breeds',
  path: '/breeds',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketAdRoute = MarketAdRouteImport.update({
  id: '/$ad',
  path: '/$ad',
  getParentRoute: () => MarketRoute,
} as any)
const HorseHorseIdRoute = HorseHorseIdRouteImport.update({
  id: '/horse/$horseId',
  path: '/horse/$horseId',
  getParentRoute: () => rootRouteImport,
} as any)
const CompetitionCompetitionIdRoute =
  CompetitionCompetitionIdRouteImport.update({
    id: '/competition/$competitionId',
    path: '/competition/$competitionId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/breeds': typeof BreedsRoute
  '/buyhorses': typeof BuyhorsesRoute
  '/competitions': typeof CompetitionsRoute
  '/horses': typeof HorsesRoute
  '/instructions': typeof InstructionsRoute
  '/leaderboard': typeof LeaderboardRoute
  '/levels': typeof LevelsRoute
  '/myhorses': typeof MyhorsesRoute
  '/puzzles': typeof PuzzlesRoute
  '/quiz': typeof QuizRoute
  '/wallet': typeof WalletRoute
  '/competition/$competitionId': typeof CompetitionCompetitionIdRoute
  '/horse/$horseId': typeof HorseHorseIdRoute
  '/market/$ad': typeof MarketAdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/breeds': typeof BreedsRoute
  '/buyhorses': typeof BuyhorsesRoute
  '/competitions': typeof CompetitionsRoute
  '/horses': typeof HorsesRoute
  '/instructions': typeof InstructionsRoute
  '/leaderboard': typeof LeaderboardRoute
  '/levels': typeof LevelsRoute
  '/myhorses': typeof MyhorsesRoute
  '/puzzles': typeof PuzzlesRoute
  '/quiz': typeof QuizRoute
  '/wallet': typeof WalletRoute
  '/competition/$competitionId': typeof CompetitionCompetitionIdRoute
  '/horse/$horseId': typeof HorseHorseIdRoute
  '/market/$ad': typeof MarketAdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/breeds': typeof BreedsRoute
  '/buyhorses': typeof BuyhorsesRoute
  '/competitions': typeof CompetitionsRoute
  '/horses': typeof HorsesRoute
  '/instructions': typeof InstructionsRoute
  '/leaderboard': typeof LeaderboardRoute
  '/levels': typeof LevelsRoute
  '/myhorses': typeof MyhorsesRoute
  '/puzzles': typeof PuzzlesRoute
  '/quiz': typeof QuizRoute
  '/wallet': typeof WalletRoute
  '/competition/$competitionId': typeof CompetitionCompetitionIdRoute
  '/horse/$horseId': typeof HorseHorseIdRoute
  '/market/$ad': typeof MarketAdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/breeds'
    | '/buyhorses'
    | '/competitions'
    | '/horses'
    | '/instructions'
    | '/leaderboard'
    | '/levels'
    | '/myhorses'
    | '/puzzles'
    | '/quiz'
    | '/wallet'
    | '/competition/$competitionId'
    | '/horse/$horseId'
    | '/market/$ad'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/breeds'
    | '/buyhorses'
    | '/competitions'
    | '/horses'
    | '/instructions'
    | '/leaderboard'
    | '/levels'
    | '/myhorses'
    | '/puzzles'
    | '/quiz'
    | '/wallet'
    | '/competition/$competitionId'
    | '/horse/$horseId'
    | '/market/$ad'
  id:
    | '__root__'
    | '/'
    | '/breeds'
    | '/buyhorses'
    | '/competitions'
    | '/horses'
    | '/instructions'
    | '/leaderboard'
    | '/levels'
    | '/myhorses'
    | '/puzzles'
    | '/quiz'
    | '/wallet'
    | '/competition/$competitionId'
    | '/horse/$horseId'
    | '/market/$ad'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BreedsRoute: typeof BreedsRoute
  BuyhorsesRoute: typeof BuyhorsesRoute
  CompetitionsRoute: typeof CompetitionsRoute
  HorsesRoute: typeof HorsesRoute
  InstructionsRoute: typeof InstructionsRoute
  LeaderboardRoute: typeof LeaderboardRoute
  LevelsRoute: typeof LevelsRoute
  MyhorsesRoute: typeof MyhorsesRoute
  PuzzlesRoute: typeof PuzzlesRoute
  QuizRoute: typeof QuizRoute
  WalletRoute: typeof WalletRoute
  CompetitionCompetitionIdRoute: typeof CompetitionCompetitionIdRoute
  HorseHorseIdRoute: typeof HorseHorseIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wallet': {
      id: '/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof WalletRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/puzzles': {
      id: '/puzzles'
      path: '/puzzles'
      fullPath: '/puzzles'
      preLoaderRoute: typeof PuzzlesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/myhorses': {
      id: '/myhorses'
      path: '/myhorses'
      fullPath: '/myhorses'
      preLoaderRoute: typeof MyhorsesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/levels': {
      id: '/levels'
      path: '/levels'
      fullPath: '/levels'
      preLoaderRoute: typeof LevelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/instructions': {
      id: '/instructions'
      path: '/instructions'
      fullPath: '/instructions'
      preLoaderRoute: typeof InstructionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/horses': {
      id: '/horses'
      path: '/horses'
      fullPath: '/horses'
      preLoaderRoute: typeof HorsesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/competitions': {
      id: '/competitions'
      path: '/competitions'
      fullPath: '/competitions'
      preLoaderRoute: typeof CompetitionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/buyhorses': {
      id: '/buyhorses'
      path: '/buyhorses'
      fullPath: '/buyhorses'
      preLoaderRoute: typeof BuyhorsesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/breeds': {
      id: '/breeds'
      path: '/breeds'
      fullPath: '/breeds'
      preLoaderRoute: typeof BreedsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market/$ad': {
      id: '/market/$ad'
      path: '/$ad'
      fullPath: '/market/$ad'
      preLoaderRoute: typeof MarketAdRouteImport
      parentRoute: typeof MarketRoute
    }
    '/horse/$horseId': {
      id: '/horse/$horseId'
      path: '/horse/$horseId'
      fullPath: '/horse/$horseId'
      preLoaderRoute: typeof HorseHorseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/competition/$competitionId': {
      id: '/competition/$competitionId'
      path: '/competition/$competitionId'
      fullPath: '/competition/$competitionId'
      preLoaderRoute: typeof CompetitionCompetitionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BreedsRoute: BreedsRoute,
  BuyhorsesRoute: BuyhorsesRoute,
  CompetitionsRoute: CompetitionsRoute,
  HorsesRoute: HorsesRoute,
  InstructionsRoute: InstructionsRoute,
  LeaderboardRoute: LeaderboardRoute,
  LevelsRoute: LevelsRoute,
  MyhorsesRoute: MyhorsesRoute,
  PuzzlesRoute: PuzzlesRoute,
  QuizRoute: QuizRoute,
  WalletRoute: WalletRoute,
  CompetitionCompetitionIdRoute: CompetitionCompetitionIdRoute,
  HorseHorseIdRoute: HorseHorseIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
