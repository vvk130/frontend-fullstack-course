/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as QuizesRouteImport } from './routes/quizes'
import { Route as QuizRouteImport } from './routes/quiz'
import { Route as PuzzlesRouteImport } from './routes/puzzles'
import { Route as MyhorsesRouteImport } from './routes/myhorses'
import { Route as LevelsRouteImport } from './routes/levels'
import { Route as LeaderboardRouteImport } from './routes/leaderboard'
import { Route as InstructionsRouteImport } from './routes/instructions'
import { Route as HorsesRouteImport } from './routes/horses'
import { Route as CompetitionsRouteImport } from './routes/competitions'
import { Route as CleanstableRouteImport } from './routes/cleanstable'
import { Route as BuyhorsesRouteImport } from './routes/buyhorses'
import { Route as BreedsRouteImport } from './routes/breeds'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WalletWalletIdRouteImport } from './routes/wallet.$walletId'
import { Route as QuizQuizIdRouteImport } from './routes/quiz.$quizId'
import { Route as MarketAdRouteImport } from './routes/market.$ad'
import { Route as HorseHorseIdRouteImport } from './routes/horse.$horseId'
import { Route as CompetitionCompetitionIdRouteImport } from './routes/competition.$competitionId'
import { Route as QuizQuizIdUpdateRouteImport } from './routes/quiz.$quizId.update'
import { Route as MarketAdUpdateRouteImport } from './routes/market.$ad.update'
import { Route as HorseHorseIdUpdateRouteImport } from './routes/horse.$horseId.update'
import { Route as HorseHorseIdFoalsRouteImport } from './routes/horse.$horseId.foals'
import { Route as HorseHorseIdCompstatsRouteImport } from './routes/horse.$horseId.compstats'
import { Route as HorseHorseIdBreedRouteImport } from './routes/horse.$horseId.breed'
import { Route as CompetitionCompetitionIdUpdateRouteImport } from './routes/competition.$competitionId.update'

const QuizesRoute = QuizesRouteImport.update({
  id: '/quizes',
  path: '/quizes',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizRoute = QuizRouteImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const PuzzlesRoute = PuzzlesRouteImport.update({
  id: '/puzzles',
  path: '/puzzles',
  getParentRoute: () => rootRouteImport,
} as any)
const MyhorsesRoute = MyhorsesRouteImport.update({
  id: '/myhorses',
  path: '/myhorses',
  getParentRoute: () => rootRouteImport,
} as any)
const LevelsRoute = LevelsRouteImport.update({
  id: '/levels',
  path: '/levels',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaderboardRoute = LeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRouteImport,
} as any)
const InstructionsRoute = InstructionsRouteImport.update({
  id: '/instructions',
  path: '/instructions',
  getParentRoute: () => rootRouteImport,
} as any)
const HorsesRoute = HorsesRouteImport.update({
  id: '/horses',
  path: '/horses',
  getParentRoute: () => rootRouteImport,
} as any)
const CompetitionsRoute = CompetitionsRouteImport.update({
  id: '/competitions',
  path: '/competitions',
  getParentRoute: () => rootRouteImport,
} as any)
const CleanstableRoute = CleanstableRouteImport.update({
  id: '/cleanstable',
  path: '/cleanstable',
  getParentRoute: () => rootRouteImport,
} as any)
const BuyhorsesRoute = BuyhorsesRouteImport.update({
  id: '/buyhorses',
  path: '/buyhorses',
  getParentRoute: () => rootRouteImport,
} as any)
const BreedsRoute = BreedsRouteImport.update({
  id: '/breeds',
  path: '/breeds',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WalletWalletIdRoute = WalletWalletIdRouteImport.update({
  id: '/wallet/$walletId',
  path: '/wallet/$walletId',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizQuizIdRoute = QuizQuizIdRouteImport.update({
  id: '/$quizId',
  path: '/$quizId',
  getParentRoute: () => QuizRoute,
} as any)
const MarketAdRoute = MarketAdRouteImport.update({
  id: '/market/$ad',
  path: '/market/$ad',
  getParentRoute: () => rootRouteImport,
} as any)
const HorseHorseIdRoute = HorseHorseIdRouteImport.update({
  id: '/horse/$horseId',
  path: '/horse/$horseId',
  getParentRoute: () => rootRouteImport,
} as any)
const CompetitionCompetitionIdRoute =
  CompetitionCompetitionIdRouteImport.update({
    id: '/competition/$competitionId',
    path: '/competition/$competitionId',
    getParentRoute: () => rootRouteImport,
  } as any)
const QuizQuizIdUpdateRoute = QuizQuizIdUpdateRouteImport.update({
  id: '/update',
  path: '/update',
  getParentRoute: () => QuizQuizIdRoute,
} as any)
const MarketAdUpdateRoute = MarketAdUpdateRouteImport.update({
  id: '/update',
  path: '/update',
  getParentRoute: () => MarketAdRoute,
} as any)
const HorseHorseIdUpdateRoute = HorseHorseIdUpdateRouteImport.update({
  id: '/update',
  path: '/update',
  getParentRoute: () => HorseHorseIdRoute,
} as any)
const HorseHorseIdFoalsRoute = HorseHorseIdFoalsRouteImport.update({
  id: '/foals',
  path: '/foals',
  getParentRoute: () => HorseHorseIdRoute,
} as any)
const HorseHorseIdCompstatsRoute = HorseHorseIdCompstatsRouteImport.update({
  id: '/compstats',
  path: '/compstats',
  getParentRoute: () => HorseHorseIdRoute,
} as any)
const HorseHorseIdBreedRoute = HorseHorseIdBreedRouteImport.update({
  id: '/breed',
  path: '/breed',
  getParentRoute: () => HorseHorseIdRoute,
} as any)
const CompetitionCompetitionIdUpdateRoute =
  CompetitionCompetitionIdUpdateRouteImport.update({
    id: '/update',
    path: '/update',
    getParentRoute: () => CompetitionCompetitionIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/breeds': typeof BreedsRoute
  '/buyhorses': typeof BuyhorsesRoute
  '/cleanstable': typeof CleanstableRoute
  '/competitions': typeof CompetitionsRoute
  '/horses': typeof HorsesRoute
  '/instructions': typeof InstructionsRoute
  '/leaderboard': typeof LeaderboardRoute
  '/levels': typeof LevelsRoute
  '/myhorses': typeof MyhorsesRoute
  '/puzzles': typeof PuzzlesRoute
  '/quiz': typeof QuizRouteWithChildren
  '/quizes': typeof QuizesRoute
  '/competition/$competitionId': typeof CompetitionCompetitionIdRouteWithChildren
  '/horse/$horseId': typeof HorseHorseIdRouteWithChildren
  '/market/$ad': typeof MarketAdRouteWithChildren
  '/quiz/$quizId': typeof QuizQuizIdRouteWithChildren
  '/wallet/$walletId': typeof WalletWalletIdRoute
  '/competition/$competitionId/update': typeof CompetitionCompetitionIdUpdateRoute
  '/horse/$horseId/breed': typeof HorseHorseIdBreedRoute
  '/horse/$horseId/compstats': typeof HorseHorseIdCompstatsRoute
  '/horse/$horseId/foals': typeof HorseHorseIdFoalsRoute
  '/horse/$horseId/update': typeof HorseHorseIdUpdateRoute
  '/market/$ad/update': typeof MarketAdUpdateRoute
  '/quiz/$quizId/update': typeof QuizQuizIdUpdateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/breeds': typeof BreedsRoute
  '/buyhorses': typeof BuyhorsesRoute
  '/cleanstable': typeof CleanstableRoute
  '/competitions': typeof CompetitionsRoute
  '/horses': typeof HorsesRoute
  '/instructions': typeof InstructionsRoute
  '/leaderboard': typeof LeaderboardRoute
  '/levels': typeof LevelsRoute
  '/myhorses': typeof MyhorsesRoute
  '/puzzles': typeof PuzzlesRoute
  '/quiz': typeof QuizRouteWithChildren
  '/quizes': typeof QuizesRoute
  '/competition/$competitionId': typeof CompetitionCompetitionIdRouteWithChildren
  '/horse/$horseId': typeof HorseHorseIdRouteWithChildren
  '/market/$ad': typeof MarketAdRouteWithChildren
  '/quiz/$quizId': typeof QuizQuizIdRouteWithChildren
  '/wallet/$walletId': typeof WalletWalletIdRoute
  '/competition/$competitionId/update': typeof CompetitionCompetitionIdUpdateRoute
  '/horse/$horseId/breed': typeof HorseHorseIdBreedRoute
  '/horse/$horseId/compstats': typeof HorseHorseIdCompstatsRoute
  '/horse/$horseId/foals': typeof HorseHorseIdFoalsRoute
  '/horse/$horseId/update': typeof HorseHorseIdUpdateRoute
  '/market/$ad/update': typeof MarketAdUpdateRoute
  '/quiz/$quizId/update': typeof QuizQuizIdUpdateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/breeds': typeof BreedsRoute
  '/buyhorses': typeof BuyhorsesRoute
  '/cleanstable': typeof CleanstableRoute
  '/competitions': typeof CompetitionsRoute
  '/horses': typeof HorsesRoute
  '/instructions': typeof InstructionsRoute
  '/leaderboard': typeof LeaderboardRoute
  '/levels': typeof LevelsRoute
  '/myhorses': typeof MyhorsesRoute
  '/puzzles': typeof PuzzlesRoute
  '/quiz': typeof QuizRouteWithChildren
  '/quizes': typeof QuizesRoute
  '/competition/$competitionId': typeof CompetitionCompetitionIdRouteWithChildren
  '/horse/$horseId': typeof HorseHorseIdRouteWithChildren
  '/market/$ad': typeof MarketAdRouteWithChildren
  '/quiz/$quizId': typeof QuizQuizIdRouteWithChildren
  '/wallet/$walletId': typeof WalletWalletIdRoute
  '/competition/$competitionId/update': typeof CompetitionCompetitionIdUpdateRoute
  '/horse/$horseId/breed': typeof HorseHorseIdBreedRoute
  '/horse/$horseId/compstats': typeof HorseHorseIdCompstatsRoute
  '/horse/$horseId/foals': typeof HorseHorseIdFoalsRoute
  '/horse/$horseId/update': typeof HorseHorseIdUpdateRoute
  '/market/$ad/update': typeof MarketAdUpdateRoute
  '/quiz/$quizId/update': typeof QuizQuizIdUpdateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/breeds'
    | '/buyhorses'
    | '/cleanstable'
    | '/competitions'
    | '/horses'
    | '/instructions'
    | '/leaderboard'
    | '/levels'
    | '/myhorses'
    | '/puzzles'
    | '/quiz'
    | '/quizes'
    | '/competition/$competitionId'
    | '/horse/$horseId'
    | '/market/$ad'
    | '/quiz/$quizId'
    | '/wallet/$walletId'
    | '/competition/$competitionId/update'
    | '/horse/$horseId/breed'
    | '/horse/$horseId/compstats'
    | '/horse/$horseId/foals'
    | '/horse/$horseId/update'
    | '/market/$ad/update'
    | '/quiz/$quizId/update'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/breeds'
    | '/buyhorses'
    | '/cleanstable'
    | '/competitions'
    | '/horses'
    | '/instructions'
    | '/leaderboard'
    | '/levels'
    | '/myhorses'
    | '/puzzles'
    | '/quiz'
    | '/quizes'
    | '/competition/$competitionId'
    | '/horse/$horseId'
    | '/market/$ad'
    | '/quiz/$quizId'
    | '/wallet/$walletId'
    | '/competition/$competitionId/update'
    | '/horse/$horseId/breed'
    | '/horse/$horseId/compstats'
    | '/horse/$horseId/foals'
    | '/horse/$horseId/update'
    | '/market/$ad/update'
    | '/quiz/$quizId/update'
  id:
    | '__root__'
    | '/'
    | '/breeds'
    | '/buyhorses'
    | '/cleanstable'
    | '/competitions'
    | '/horses'
    | '/instructions'
    | '/leaderboard'
    | '/levels'
    | '/myhorses'
    | '/puzzles'
    | '/quiz'
    | '/quizes'
    | '/competition/$competitionId'
    | '/horse/$horseId'
    | '/market/$ad'
    | '/quiz/$quizId'
    | '/wallet/$walletId'
    | '/competition/$competitionId/update'
    | '/horse/$horseId/breed'
    | '/horse/$horseId/compstats'
    | '/horse/$horseId/foals'
    | '/horse/$horseId/update'
    | '/market/$ad/update'
    | '/quiz/$quizId/update'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BreedsRoute: typeof BreedsRoute
  BuyhorsesRoute: typeof BuyhorsesRoute
  CleanstableRoute: typeof CleanstableRoute
  CompetitionsRoute: typeof CompetitionsRoute
  HorsesRoute: typeof HorsesRoute
  InstructionsRoute: typeof InstructionsRoute
  LeaderboardRoute: typeof LeaderboardRoute
  LevelsRoute: typeof LevelsRoute
  MyhorsesRoute: typeof MyhorsesRoute
  PuzzlesRoute: typeof PuzzlesRoute
  QuizRoute: typeof QuizRouteWithChildren
  QuizesRoute: typeof QuizesRoute
  CompetitionCompetitionIdRoute: typeof CompetitionCompetitionIdRouteWithChildren
  HorseHorseIdRoute: typeof HorseHorseIdRouteWithChildren
  MarketAdRoute: typeof MarketAdRouteWithChildren
  WalletWalletIdRoute: typeof WalletWalletIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/quizes': {
      id: '/quizes'
      path: '/quizes'
      fullPath: '/quizes'
      preLoaderRoute: typeof QuizesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/puzzles': {
      id: '/puzzles'
      path: '/puzzles'
      fullPath: '/puzzles'
      preLoaderRoute: typeof PuzzlesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/myhorses': {
      id: '/myhorses'
      path: '/myhorses'
      fullPath: '/myhorses'
      preLoaderRoute: typeof MyhorsesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/levels': {
      id: '/levels'
      path: '/levels'
      fullPath: '/levels'
      preLoaderRoute: typeof LevelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/instructions': {
      id: '/instructions'
      path: '/instructions'
      fullPath: '/instructions'
      preLoaderRoute: typeof InstructionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/horses': {
      id: '/horses'
      path: '/horses'
      fullPath: '/horses'
      preLoaderRoute: typeof HorsesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/competitions': {
      id: '/competitions'
      path: '/competitions'
      fullPath: '/competitions'
      preLoaderRoute: typeof CompetitionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cleanstable': {
      id: '/cleanstable'
      path: '/cleanstable'
      fullPath: '/cleanstable'
      preLoaderRoute: typeof CleanstableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/buyhorses': {
      id: '/buyhorses'
      path: '/buyhorses'
      fullPath: '/buyhorses'
      preLoaderRoute: typeof BuyhorsesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/breeds': {
      id: '/breeds'
      path: '/breeds'
      fullPath: '/breeds'
      preLoaderRoute: typeof BreedsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wallet/$walletId': {
      id: '/wallet/$walletId'
      path: '/wallet/$walletId'
      fullPath: '/wallet/$walletId'
      preLoaderRoute: typeof WalletWalletIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz/$quizId': {
      id: '/quiz/$quizId'
      path: '/$quizId'
      fullPath: '/quiz/$quizId'
      preLoaderRoute: typeof QuizQuizIdRouteImport
      parentRoute: typeof QuizRoute
    }
    '/market/$ad': {
      id: '/market/$ad'
      path: '/market/$ad'
      fullPath: '/market/$ad'
      preLoaderRoute: typeof MarketAdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/horse/$horseId': {
      id: '/horse/$horseId'
      path: '/horse/$horseId'
      fullPath: '/horse/$horseId'
      preLoaderRoute: typeof HorseHorseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/competition/$competitionId': {
      id: '/competition/$competitionId'
      path: '/competition/$competitionId'
      fullPath: '/competition/$competitionId'
      preLoaderRoute: typeof CompetitionCompetitionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz/$quizId/update': {
      id: '/quiz/$quizId/update'
      path: '/update'
      fullPath: '/quiz/$quizId/update'
      preLoaderRoute: typeof QuizQuizIdUpdateRouteImport
      parentRoute: typeof QuizQuizIdRoute
    }
    '/market/$ad/update': {
      id: '/market/$ad/update'
      path: '/update'
      fullPath: '/market/$ad/update'
      preLoaderRoute: typeof MarketAdUpdateRouteImport
      parentRoute: typeof MarketAdRoute
    }
    '/horse/$horseId/update': {
      id: '/horse/$horseId/update'
      path: '/update'
      fullPath: '/horse/$horseId/update'
      preLoaderRoute: typeof HorseHorseIdUpdateRouteImport
      parentRoute: typeof HorseHorseIdRoute
    }
    '/horse/$horseId/foals': {
      id: '/horse/$horseId/foals'
      path: '/foals'
      fullPath: '/horse/$horseId/foals'
      preLoaderRoute: typeof HorseHorseIdFoalsRouteImport
      parentRoute: typeof HorseHorseIdRoute
    }
    '/horse/$horseId/compstats': {
      id: '/horse/$horseId/compstats'
      path: '/compstats'
      fullPath: '/horse/$horseId/compstats'
      preLoaderRoute: typeof HorseHorseIdCompstatsRouteImport
      parentRoute: typeof HorseHorseIdRoute
    }
    '/horse/$horseId/breed': {
      id: '/horse/$horseId/breed'
      path: '/breed'
      fullPath: '/horse/$horseId/breed'
      preLoaderRoute: typeof HorseHorseIdBreedRouteImport
      parentRoute: typeof HorseHorseIdRoute
    }
    '/competition/$competitionId/update': {
      id: '/competition/$competitionId/update'
      path: '/update'
      fullPath: '/competition/$competitionId/update'
      preLoaderRoute: typeof CompetitionCompetitionIdUpdateRouteImport
      parentRoute: typeof CompetitionCompetitionIdRoute
    }
  }
}

interface QuizQuizIdRouteChildren {
  QuizQuizIdUpdateRoute: typeof QuizQuizIdUpdateRoute
}

const QuizQuizIdRouteChildren: QuizQuizIdRouteChildren = {
  QuizQuizIdUpdateRoute: QuizQuizIdUpdateRoute,
}

const QuizQuizIdRouteWithChildren = QuizQuizIdRoute._addFileChildren(
  QuizQuizIdRouteChildren,
)

interface QuizRouteChildren {
  QuizQuizIdRoute: typeof QuizQuizIdRouteWithChildren
}

const QuizRouteChildren: QuizRouteChildren = {
  QuizQuizIdRoute: QuizQuizIdRouteWithChildren,
}

const QuizRouteWithChildren = QuizRoute._addFileChildren(QuizRouteChildren)

interface CompetitionCompetitionIdRouteChildren {
  CompetitionCompetitionIdUpdateRoute: typeof CompetitionCompetitionIdUpdateRoute
}

const CompetitionCompetitionIdRouteChildren: CompetitionCompetitionIdRouteChildren =
  {
    CompetitionCompetitionIdUpdateRoute: CompetitionCompetitionIdUpdateRoute,
  }

const CompetitionCompetitionIdRouteWithChildren =
  CompetitionCompetitionIdRoute._addFileChildren(
    CompetitionCompetitionIdRouteChildren,
  )

interface HorseHorseIdRouteChildren {
  HorseHorseIdBreedRoute: typeof HorseHorseIdBreedRoute
  HorseHorseIdCompstatsRoute: typeof HorseHorseIdCompstatsRoute
  HorseHorseIdFoalsRoute: typeof HorseHorseIdFoalsRoute
  HorseHorseIdUpdateRoute: typeof HorseHorseIdUpdateRoute
}

const HorseHorseIdRouteChildren: HorseHorseIdRouteChildren = {
  HorseHorseIdBreedRoute: HorseHorseIdBreedRoute,
  HorseHorseIdCompstatsRoute: HorseHorseIdCompstatsRoute,
  HorseHorseIdFoalsRoute: HorseHorseIdFoalsRoute,
  HorseHorseIdUpdateRoute: HorseHorseIdUpdateRoute,
}

const HorseHorseIdRouteWithChildren = HorseHorseIdRoute._addFileChildren(
  HorseHorseIdRouteChildren,
)

interface MarketAdRouteChildren {
  MarketAdUpdateRoute: typeof MarketAdUpdateRoute
}

const MarketAdRouteChildren: MarketAdRouteChildren = {
  MarketAdUpdateRoute: MarketAdUpdateRoute,
}

const MarketAdRouteWithChildren = MarketAdRoute._addFileChildren(
  MarketAdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BreedsRoute: BreedsRoute,
  BuyhorsesRoute: BuyhorsesRoute,
  CleanstableRoute: CleanstableRoute,
  CompetitionsRoute: CompetitionsRoute,
  HorsesRoute: HorsesRoute,
  InstructionsRoute: InstructionsRoute,
  LeaderboardRoute: LeaderboardRoute,
  LevelsRoute: LevelsRoute,
  MyhorsesRoute: MyhorsesRoute,
  PuzzlesRoute: PuzzlesRoute,
  QuizRoute: QuizRouteWithChildren,
  QuizesRoute: QuizesRoute,
  CompetitionCompetitionIdRoute: CompetitionCompetitionIdRouteWithChildren,
  HorseHorseIdRoute: HorseHorseIdRouteWithChildren,
  MarketAdRoute: MarketAdRouteWithChildren,
  WalletWalletIdRoute: WalletWalletIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
